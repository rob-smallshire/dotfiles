- hosts: message-broker-hosts
  name: Gather facts from message-broker-hosts
  tasks: [ ]

- hosts: celery-worker-hosts
  vars:
    worker_module: sorting_task
  tasks:

    - name: Wait for the remote system to become available
      wait_for_connection:
          timeout: 300

    - name: "Working around Ansible lameness on Ubuntu..."
      become: yes
      become_method: sudo
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 3600
      with_items:
        - aptitude

    - name: Update apt repositories
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
        upgrade: yes

# Ultimately, we should probably download and compile our own Python into /opt
# so we have precise control over the version of Python used, rather than
# relying on whatever Ubuntu has packaged up for us.

    - name: Install python3-venv
      become: yes
      become_method: sudo
      apt:
        name: python3-venv
        state: present

    - name: Install python3-pip
      become: yes
      become_method: sudo
      apt:
        name: python3-pip
        state: present

    - name: Upgrade pip in a virtualenv
      pip:
        virtualenv_command: /usr/bin/pyvenv
        virtualenv: ~/.virtualenvs/cosmic-cloud
        name: pip
        state: latest

    - name: Install Celery
      pip:
        virtualenv_command: /usr/bin/pyvenv
        virtualenv: ~/.virtualenvs/cosmic-cloud
        name: celery
        version: 3.1.25

    - name: Ensure ~/cosmic-cloud/ exists
      file:
        path: /home/ubuntu/cosmic-cloud/
        state: directory
        owner: ubuntu

    - name: Deploy celeryconfig.py
      template:
        src: celeryconfig.py.j2
        dest: /home/ubuntu/cosmic-cloud/celeryconfig.py
        owner: ubuntu
      vars:
        user: merlin
        password: avalon
        host: "{{ groups['message-broker-hosts'][0] }}"
        vhost: camelot
        module: "{{ worker_module }}"
      notify:
        - "restart supervisord"
        - "restart celery_worker"

    - name: Fetch the celeryconfig.py back here (workaround)
      fetch:
        src: /home/ubuntu/cosmic-cloud/celeryconfig.py
        dest: ./
        flat: yes

    - name: "Deploy the task worker module: {{ worker_module }}"
      copy:
        src: "{{ worker_module }}.py"
        dest: "/home/ubuntu/cosmic-cloud/{{ worker_module }}.py"
        owner: ubuntu
      notify:
        - "restart supervisord"
        - "restart celery_worker"

    - name: Deploy /etc/logrotate.d/celery_worker
      become: yes
      become_method: sudo
      copy:
        src: celery_worker_log_rotate
        dest: /etc/logrotate.d/celery_worker

    - name: Install python-setuptools (for Python 2, to run supervisord)
      become: yes
      become_method: sudo
      apt:
        name: python-setuptools
        state: present

    - name: Install supervisor
      become: yes
      become_method: sudo
      easy_install:
        name: supervisor
      notify:
        - "restart supervisord"

    - name: Make /etc/supervisor/
      become: yes
      become_method: sudo
      file:
        path: /etc/supervisor/
        state: directory
      notify:
        - "restart supervisord"

    - name: Populate /etc/supervisor/supervisord.conf
      become: yes
      become_method: sudo
      shell: echo_supervisord_conf > /etc/supervisor/supervisord.conf
      args:
        creates: /etc/supervisor/supervisord.conf
      notify:
        - "restart supervisord"

    - name: Add a reference to conf.d/*.conf
      become: yes
      become_method: sudo
      blockinfile:
        path: /etc/supervisor/supervisord.conf
        block: |
          [include]
          files=conf.d/*.conf
      notify:
        - "restart supervisord"

    - name: Deploy /etc/systemd/system/supervisord.service
      become: yes
      become_method: sudo
      copy:
        src: supervisord.service
        dest: /etc/systemd/system/supervisord.service
      notify:
        - "restart supervisord"

    - name: Make /etc/supervisor/conf.d/
      become: yes
      become_method: sudo
      file:
        path: /etc/supervisor/conf.d/
        state: directory
      notify:
        - "restart supervisord"

    - name: Deploy /etc/supervisor/conf.d/celery_worker.conf
      become: yes
      become_method: sudo
      copy:
        src: celery_worker.conf
        dest: /etc/supervisor/conf.d/celery_worker.conf
      notify:
       - "restart supervisord"

    - name: Ensure /var/log/celery_worker/ exists
      become: yes
      become_method: sudo
      file:
        path: /var/log/celery_worker
        state: directory
        owner: root

  handlers:

    - name: Restart supervisord
      become: yes
      become_method: sudo
      systemd:
        name: supervisord
        state: restarted
      listen: "restart supervisord"

    - name: Restart celery_worker
      become: yes
      become_method: sudo
      supervisorctl:
        name: celery_worker
        state: restarted
      listen: "restart celery_worker"
